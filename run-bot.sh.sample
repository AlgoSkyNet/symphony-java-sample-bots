#!/bin/sh

# The hostname of your Agent (ODP is shown)
AGENT_HOST=foundation-dev-api.symphony.com

# The hostname of your Pod (ODP is shown)
POD_HOST=foundation-dev.symphony.com

# Individual endpoint URLs (see -Dsessionauth.url, -Dkeyauth.url, -Dpod.url and -Dagent.url below)
# These can be changed individually, if you have a more complex Symphony architecture.
SESSIONAUTH_URL=https://${AGENT_HOST}/sessionauth
KEYAUTH_URL=https://${AGENT_HOST}/keyauth
AGENT_URL=https://${AGENT_HOST}/agent
POD_URL=https://${POD_HOST}/pod

# Email address of the Symphony user who is to receive messages from the sample bots
RECEIVER_USER_EMAIL=receiver@mycompany.com

# Java truststore
TRUSTSTORE_FILE=./certs/server.truststore
TRUSTSTORE_PASSWORD=changeit

# Bot user's email address & certificate
BOT_USER_EMAIL=userbot@mycompany.com
BOT_CERT_FILE=./certs/userbot.p12
BOT_CERT_PASSWORD=changeit


# Script starts here
if [ -z "$1" ]; then
  echo "Please run one of the following commands:"
  echo "./run-bot.sh org.symphonyoss.simplebot.HelloWorldBot"
  echo "./run-bot.sh org.symphonyoss.simplebot.EchoBot"
  echo "./run-bot.sh org.symphonyoss.simplebot.StockInfoBot"
  echo "./run-bot.sh org.symphonyoss.simplebot.RssBot"
  exit -1
fi

if [ ! -f ${BOT_CERT_FILE} ]; then
  echo "Bot cert file is missing: ${BOT_CERT_FILE}"
  exit -1
fi

if [ ! -f ${TRUSTSTORE_FILE} ]; then
  echo "truststore file is missing: ${TRUSTSTORE_FILE}"
  exit -1
fi

java \
  -cp target/symphony-java-sample-bots-0.9.0-SNAPSHOT-jar-with-dependencies.jar \
  -Dsessionauth.url=${SESSIONAUTH_URL} \
  -Dkeyauth.url=${KEYAUTH_URL} \
  -Dagent.url=${AGENT_URL} \
  -Dpod.url=${POD_URL} \
  -Dtruststore.file=${TRUSTSTORE_FILE} \
  -Dtruststore.password=${TRUSTSTORE_PASSWORD} \
  -Dbot.user.cert.file=${BOT_CERT_FILE} \
  -Dbot.user.cert.password=${BOT_CERT_PASSWORD} \
  -Dbot.user.email=${BOT_USER_EMAIL} \
  -Dreceiver.user.email=${RECEIVER_USER_EMAIL} \
  $*
